data = meta, verbose=FALSE)
findingk <- searchK(out$documents, out$vocab,
K = c(15:25), #NOTE: Write the k values you want to test
prevalence =~ crisis + party + crisis*party, #NOTE: Write a regression formula for variables that will impact topic prevalence
content =~ crisis + party + crisis*party,#NOTE: Write a regression formula for variables that will impact topic content
data = meta, verbose=FALSE)
findingk <- searchK(out$documents, out$vocab,
K = c(15:25), #NOTE: Write the k values you want to test
#prevalence =~ crisis + party + crisis*party, #NOTE: Write a regression formula for variables that will impact topic prevalence
content =~ crisis + party + crisis*party,#NOTE: Write a regression formula for variables that will impact topic content
data = meta, verbose=FALSE)
findingk <- searchK(out$documents, out$vocab,
K = c(15:25), #NOTE: Write the k values you want to test
prevalence =~ crisis + party + crisis*party, #NOTE: Write a regression formula for variables that will impact topic prevalence
#content =~ crisis + party + crisis*party,#NOTE: Write a regression formula for variables that will impact topic content
data = meta, verbose=FALSE)
First_STM <- stm(documents = out$documents, vocab = out$vocab,
K = 19, #NOTE: Write "k" value here
prevalence =~ crisis + party + crisis*party, #NOTE: Write a regression formula for variables that will impact topic prevalence
#content =~ crisis + party + crisis*party,#NOTE: Write a regression formula for variables that will impact topic content
max.em.its =75, data = out$meta,init.type = "Spectral",
verbose = FALSE)
#Plot the most prevalent topics in this model
par(mar=c(2,2,2,2))
plot(First_STM)
#INPUT HERE: Pull up specific observations that heavily relate to a topic
z2=data[-out$docs.removed,]
findThoughts(First_STM, texts = z2$text,
n = 5, #NOTE: Write how many observations you want to pull up
topics =12) #NOTE: Write which topic you want to assess
findThoughts(First_STM, texts = z2$text,
n = 5, #NOTE: Write how many observations you want to pull up
topics =16) #NOTE: Write which topic you want to assess
# INPUT HERE: Find the words that most represent a topic
labelTopics(First_STM,
topics= c(12,16), #NOTE: Write which topic you want to assess
n=5) #NOTE: Write how many top words you want to pull up
#INPUT HERE: Specify a model that assesses the prevalence of your topics
prep <- estimateEffect(c(1:19) ~ crisis + party + crisis*party, #NOTE: your formula for prevalence,
#Your DV/output is 1:"k"
#Your IV/Input is your key factors that you think impact prevalence
First_STM,meta = out$meta, uncertainty = "Global")
#INPUT HERE: Now we plot the effect of Rating, a categorical variable
plot(prep,
covariate = "rating", #NOTE: Write the variable you want to assess
topics = c(16,10,13),#NOTE: Write the topics you want to test
model = First_STM, method = "difference",
cov.value1 = "Liberal", #NOTE:Name category 1 in your variable that you want to assess
cov.value2 = "Conservative", #NOTE:Name category 2 in your variable that will be your comparison
xlab = "More Conservative ... More Liberal", #NOTE: Write what you want on the x axis
main = "Effect of Conservative vs. Liberal", #NOTE: Write what you want on the main title
xlim = c(-.6, .6),
labeltype = "custom",
custom.labels = c("Obama", "McCain", "Policy")) #NOTE: Insert custom theme names
# INPUT HERE: Find the words that most represent a topic
labelTopics(First_STM,
topics= c(12,16,3,17), #NOTE: Write which topic you want to assess
n=5) #NOTE: Write how many top words you want to pull up
#INPUT HERE: Specify a model that assesses the prevalence of your topics
prep <- estimateEffect(c(1:19) ~ crisis + party + crisis*party, #NOTE: your formula for prevalence,
#Your DV/output is 1:"k"
#Your IV/Input is your key factors that you think impact prevalence
First_STM,meta = out$meta, uncertainty = "Global")
#INPUT HERE: Clean your text data
processed<- textProcessor(data$Text, #Note: write the column that has the text
metadata = data, #NOTE: write the name of your data set
lowercase=TRUE, removestopwords=TRUE, removenumbers=TRUE,
removepunctuation=TRUE, stem=TRUE,
wordLengths=c(3,Inf),  #Here, we remove words shorter than 3 letters
sparselevel=1, language="en",  verbose=TRUE,
onlycharacter= FALSE, striphtml=FALSE,
customstopwords=c("economi","america’","american")) #NOTE: write custom stopwords here
#Now we separate our data into neat bits for our analysis
out <- prepDocuments(processed$documents, processed$vocab, processed$meta)
docs <- out$documents
vocab <- out$vocab
meta <-out$meta
findingk <- searchK(out$documents, out$vocab,
K = c(15:25), #NOTE: Write the k values you want to test
prevalence =~ crisis + party + crisis*party, #NOTE: Write a regression formula for variables that will impact topic prevalence
#content =~ crisis + party + crisis*party,#NOTE: Write a regression formula for variables that will impact topic content
data = meta, verbose=FALSE)
#Plot our results
plot(findingk)
First_STM <- stm(documents = out$documents, vocab = out$vocab,
K = 20, #NOTE: Write "k" value here
prevalence =~ crisis + party + crisis*party, #NOTE: Write a regression formula for variables that will impact topic prevalence
#content =~ crisis + party + crisis*party,#NOTE: Write a regression formula for variables that will impact topic content
max.em.its =75, data = out$meta,init.type = "Spectral",
verbose = FALSE)
#Plot the most prevalent topics in this model
par(mar=c(2,2,2,2))
plot(First_STM)
# INPUT HERE: Find the best K value
set.seed(2008)
findingk <- searchK(out$documents, out$vocab,
K = c(15:25), #NOTE: Write the k values you want to test
prevalence =~ crisis + party + crisis*party, #NOTE: Write a regression formula for variables that will impact topic prevalence
#content =~ crisis + party + crisis*party,#NOTE: Write a regression formula for variables that will impact topic content
data = meta, verbose=FALSE)
#Plot our results
plot(findingk)
set.seed(2008)
First_STM <- stm(documents = out$documents, vocab = out$vocab,
K = 20, #NOTE: Write "k" value here
prevalence =~ crisis + party + crisis*party, #NOTE: Write a regression formula for variables that will impact topic prevalence
#content =~ crisis + party + crisis*party,#NOTE: Write a regression formula for variables that will impact topic content
max.em.its =75, data = out$meta,init.type = "Spectral",
verbose = FALSE)
#Plot the most prevalent topics in this model
par(mar=c(2,2,2,2))
plot(First_STM)
#INPUT HERE: Pull up specific observations that heavily relate to a topic
z2=data[-out$docs.removed,]
findThoughts(First_STM, texts = z2$text,
n = 5, #NOTE: Write how many observations you want to pull up
topics =16) #NOTE: Write which topic you want to assess
# INPUT HERE: Find the words that most represent a topic
labelTopics(First_STM,
topics= c(12,16,13,15,14), #NOTE: Write which topic you want to assess
n=5) #NOTE: Write how many top words you want to pull up
# INPUT HERE: Find the words that most represent a topic
labelTopics(First_STM,
topics= c(12,16,13,15,14,19), #NOTE: Write which topic you want to assess
n=5) #NOTE: Write how many top words you want to pull up
#INPUT HERE: Specify a model that assesses the prevalence of your topics
prep <- estimateEffect(c(1:20) ~ crisis + party + crisis*party, #NOTE: your formula for prevalence,
#Your DV/output is 1:"k"
#Your IV/Input is your key factors that you think impact prevalence
First_STM,meta = out$meta, uncertainty = "Global")
#INPUT HERE: Now we plot the effect of CRISIS, a categorical variable
plot(prep,
covariate = "crisis", #NOTE: Write the variable you want to assess
topics = c(12,16,13,15,14,19),#NOTE: Write the topics you want to test
model = First_STM, method = "difference",
cov.value1 = FALSE, #NOTE:Name category 1 in your variable that you want to assess
cov.value2 = TRUE, #NOTE:Name category 2 in your variable that will be your comparison
xlab = "Crisis ... Non-crisis", #NOTE: Write what you want on the x axis
main = "Effect of Crisis vs. Non-crisis", #NOTE: Write what you want on the main title
xlim = c(-.6, .6),
labeltype = "custom",
custom.labels = c("Fiscal Policy and Reform",
"Employment and Unemployment",
"Economic and Industrial Development",
"International Relations and Global Challenges",
"Economic Crises and Financial Troubles",
"Social Security and Future Planning")) #NOTE: Insert custom theme names
View(meta)
#President's Message Analysis
rm(list = ls())
#President's Message Analysis
rm(list = ls())
#Load the package
library(stm)
#Load the data
setwd("R/GIRI/project/")
# read text and basic cleaning
file_paths <- c("Budget Message of the President 2007.txt",
"Budget Message of the President 2008.txt",
"Budget Message of the President 2009.txt",
"Budget Message of the President 2010.txt",
"Budget Message of the President 2011.txt",
"Budget Message of the President 2012.txt")
data_list <- list()
for (i in file_paths) {
# read text
text <- readLines(i, warn = FALSE)
# merge every row
text <- paste(text, collapse = " ")
text <- gsub("�", ".", text)
text <- gsub("\\. ", ".\n", text)
text <- gsub(" \n", "\n", text)
data_list[[i]] <- data.frame(Text = text)
}
names(data_list) <- paste("data", 7:12, sep = "")
list2env(data_list, envir = .GlobalEnv)
# function that convert text in first row into rows
convert_first_row_to_rows <- function(data_df) {
first_row_text <- as.character(data_df[1, "Text"])
rows <- unlist(strsplit(first_row_text, "\n"))
new_data_df <- data.frame(Text = rows)
return(new_data_df)
}
for (i in 7:12) {
data_df_name <- paste("data", i, sep = "")
converted_data_df <- convert_first_row_to_rows(get(data_df_name))
assign(data_df_name, converted_data_df)
}
#merge all six
data <- rbind(
cbind(data7, year = "2007", crisis=FALSE, party='R', state='TX'),
cbind(data8, year = "2008", crisis=FALSE, party='R', state='TX'),
cbind(data9, year = "2009", crisis=TRUE, party='R', state='TX'),
cbind(data10, year = "2010", crisis=TRUE, party='D', state='IL'),
cbind(data11, year = "2011", crisis=FALSE, party='D', state='IL'),
cbind(data12, year = "2012", crisis=FALSE, party='D', state='IL')
)
Sys.setlocale(locale="en_US.UTF-8")
colnames(data)[colnames(data) == "V1"] <- "text"
#INPUT HERE: Clean your text data
processed<- textProcessor(data$Text, #Note: write the column that has the text
metadata = data, #NOTE: write the name of your data set
lowercase=TRUE, removestopwords=TRUE, removenumbers=TRUE,
removepunctuation=TRUE, stem=TRUE,
wordLengths=c(3,Inf),  #Here, we remove words shorter than 3 letters
sparselevel=1, language="en",  verbose=TRUE,
onlycharacter= FALSE, striphtml=FALSE,
customstopwords=c("economi","america’","american")) #NOTE: write custom stopwords here
#Now we separate our data into neat bits for our analysis
out <- prepDocuments(processed$documents, processed$vocab, processed$meta)
docs <- out$documents
vocab <- out$vocab
meta <-out$meta
# INPUT HERE: Find the best K value
set.seed(2008)
findingk <- searchK(out$documents, out$vocab,
K = c(15:25), #NOTE: Write the k values you want to test
prevalence =~ crisis + party + crisis*party, #NOTE: Write a regression formula for variables that will impact topic prevalence
#content =~ crisis + party + crisis*party,#NOTE: Write a regression formula for variables that will impact topic content
data = meta, verbose=FALSE)
#Plot our results
plot(findingk)
set.seed(2008)
First_STM <- stm(documents = out$documents, vocab = out$vocab,
K = 20, #NOTE: Write "k" value here
prevalence =~ crisis + party + crisis*party, #NOTE: Write a regression formula for variables that will impact topic prevalence
#content =~ crisis + party + crisis*party,#NOTE: Write a regression formula for variables that will impact topic content
max.em.its =75, data = out$meta,init.type = "Spectral",
verbose = FALSE)
#Plot the most prevalent topics in this model
par(mar=c(2,2,2,2))
plot(First_STM)
#INPUT HERE: Pull up specific observations that heavily relate to a topic
z2=data[-out$docs.removed,]
findThoughts(First_STM, texts = z2$text,
n = 5, #NOTE: Write how many observations you want to pull up
topics =16) #NOTE: Write which topic you want to assess
# INPUT HERE: Find the words that most represent a topic
labelTopics(First_STM,
topics= c(12,16,13,15,14,19), #NOTE: Write which topic you want to assess
n=5) #NOTE: Write how many top words you want to pull up
#INPUT HERE: Specify a model that assesses the prevalence of your topics
prep <- estimateEffect(c(1:20) ~ crisis + party + crisis*party, #NOTE: your formula for prevalence,
#Your DV/output is 1:"k"
#Your IV/Input is your key factors that you think impact prevalence
First_STM,meta = out$meta, uncertainty = "Global")
#INPUT HERE: Now we plot the effect of CRISIS, a categorical variable
plot(prep,
covariate = "crisis", #NOTE: Write the variable you want to assess
topics = c(12,16,13,15,14,19),#NOTE: Write the topics you want to test
model = First_STM, method = "difference",
cov.value1 = FALSE, #NOTE:Name category 1 in your variable that you want to assess
cov.value2 = TRUE, #NOTE:Name category 2 in your variable that will be your comparison
xlab = "Crisis ... Non-crisis", #NOTE: Write what you want on the x axis
main = "Effect of Crisis vs. Non-crisis", #NOTE: Write what you want on the main title
xlim = c(-.6, .6),
labeltype = "custom",
custom.labels = c("Fiscal Policy and Reform",
"Employment and Unemployment",
"Economic and Industrial Development",
"International Relations and Global Challenges",
"Economic Crises and Financial Troubles",
"Social Security and Future Planning")) #NOTE: Insert custom theme names
#INPUT HERE: Now we plot the effect of CRISIS, a categorical variable
plot(prep,
covariate = "crisis", #NOTE: Write the variable you want to assess
topics = c(12,16,13,15,14,19),#NOTE: Write the topics you want to test
model = First_STM, method = "difference",
cov.value1 = 0, #NOTE:Name category 1 in your variable that you want to assess
cov.value2 = 1, #NOTE:Name category 2 in your variable that will be your comparison
xlab = "Crisis ... Non-crisis", #NOTE: Write what you want on the x axis
main = "Effect of Crisis vs. Non-crisis", #NOTE: Write what you want on the main title
xlim = c(-.6, .6),
labeltype = "custom",
custom.labels = c("Fiscal Policy and Reform",
"Employment and Unemployment",
"Economic and Industrial Development",
"International Relations and Global Challenges",
"Economic Crises and Financial Troubles",
"Social Security and Future Planning")) #NOTE: Insert custom theme names
#President's Message Analysis
rm(list = ls())
#Load the package
library(stm)
#Load the data
setwd("R/GIRI/project/")
# read text and basic cleaning
file_paths <- c("Budget Message of the President 2007.txt",
"Budget Message of the President 2008.txt",
"Budget Message of the President 2009.txt",
"Budget Message of the President 2010.txt",
"Budget Message of the President 2011.txt",
"Budget Message of the President 2012.txt")
data_list <- list()
for (i in file_paths) {
# read text
text <- readLines(i, warn = FALSE)
# merge every row
text <- paste(text, collapse = " ")
text <- gsub("�", ".", text)
text <- gsub("\\. ", ".\n", text)
text <- gsub(" \n", "\n", text)
data_list[[i]] <- data.frame(Text = text)
}
names(data_list) <- paste("data", 7:12, sep = "")
list2env(data_list, envir = .GlobalEnv)
# function that convert text in first row into rows
convert_first_row_to_rows <- function(data_df) {
first_row_text <- as.character(data_df[1, "Text"])
rows <- unlist(strsplit(first_row_text, "\n"))
new_data_df <- data.frame(Text = rows)
return(new_data_df)
}
for (i in 7:12) {
data_df_name <- paste("data", i, sep = "")
converted_data_df <- convert_first_row_to_rows(get(data_df_name))
assign(data_df_name, converted_data_df)
}
#merge all six
data <- rbind(
cbind(data7, year = "2007", crisis='non-crisis', party='R', state='TX'),
cbind(data8, year = "2008", crisis='non-crisis', party='R', state='TX'),
cbind(data9, year = "2009", crisis='crisis', party='R', state='TX'),
cbind(data10, year = "2010", crisis='crisis', party='D', state='IL'),
cbind(data11, year = "2011", crisis='non-crisis', party='D', state='IL'),
cbind(data12, year = "2012", crisis='non-crisis', party='D', state='IL')
)
Sys.setlocale(locale="en_US.UTF-8")
colnames(data)[colnames(data) == "V1"] <- "text"
#INPUT HERE: Clean your text data
processed<- textProcessor(data$Text, #Note: write the column that has the text
metadata = data, #NOTE: write the name of your data set
lowercase=TRUE, removestopwords=TRUE, removenumbers=TRUE,
removepunctuation=TRUE, stem=TRUE,
wordLengths=c(3,Inf),  #Here, we remove words shorter than 3 letters
sparselevel=1, language="en",  verbose=TRUE,
onlycharacter= FALSE, striphtml=FALSE,
customstopwords=c("economi","america’","american")) #NOTE: write custom stopwords here
#Now we separate our data into neat bits for our analysis
out <- prepDocuments(processed$documents, processed$vocab, processed$meta)
docs <- out$documents
vocab <- out$vocab
meta <-out$meta
# INPUT HERE: Find the best K value
set.seed(2008)
findingk <- searchK(out$documents, out$vocab,
K = c(15:25), #NOTE: Write the k values you want to test
prevalence =~ crisis + party + crisis*party, #NOTE: Write a regression formula for variables that will impact topic prevalence
#content =~ crisis + party + crisis*party,#NOTE: Write a regression formula for variables that will impact topic content
data = meta, verbose=FALSE)
#Plot our results
plot(findingk)
set.seed(2008)
First_STM <- stm(documents = out$documents, vocab = out$vocab,
K = 20, #NOTE: Write "k" value here
prevalence =~ crisis + party + crisis*party, #NOTE: Write a regression formula for variables that will impact topic prevalence
#content =~ crisis + party + crisis*party,#NOTE: Write a regression formula for variables that will impact topic content
max.em.its =75, data = out$meta,init.type = "Spectral",
verbose = FALSE)
#Plot the most prevalent topics in this model
par(mar=c(2,2,2,2))
plot(First_STM)
#INPUT HERE: Pull up specific observations that heavily relate to a topic
z2=data[-out$docs.removed,]
findThoughts(First_STM, texts = z2$text,
n = 5, #NOTE: Write how many observations you want to pull up
topics =16) #NOTE: Write which topic you want to assess
# INPUT HERE: Find the words that most represent a topic
labelTopics(First_STM,
topics= c(12,16,13,15,14,19), #NOTE: Write which topic you want to assess
n=5) #NOTE: Write how many top words you want to pull up
#INPUT HERE: Specify a model that assesses the prevalence of your topics
prep <- estimateEffect(c(1:20) ~ crisis + party + crisis*party, #NOTE: your formula for prevalence,
#Your DV/output is 1:"k"
#Your IV/Input is your key factors that you think impact prevalence
First_STM,meta = out$meta, uncertainty = "Global")
#INPUT HERE: Now we plot the effect of CRISIS, a categorical variable
plot(prep,
covariate = "crisis", #NOTE: Write the variable you want to assess
topics = c(12,16,13,15,14,19),#NOTE: Write the topics you want to test
model = First_STM, method = "difference",
cov.value1 = 'non-crisis', #NOTE:Name category 1 in your variable that you want to assess
cov.value2 = 'crisis', #NOTE:Name category 2 in your variable that will be your comparison
xlab = "Crisis ... Non-crisis", #NOTE: Write what you want on the x axis
main = "Effect of Crisis vs. Non-crisis", #NOTE: Write what you want on the main title
xlim = c(-.6, .6),
labeltype = "custom",
custom.labels = c("Fiscal Policy and Reform",
"Employment and Unemployment",
"Economic and Industrial Development",
"International Relations and Global Challenges",
"Economic Crises and Financial Troubles",
"Social Security and Future Planning")) #NOTE: Insert custom theme names
#INPUT HERE: Now we plot the effect of CRISIS, a categorical variable
plot(prep,
covariate = "crisis", #NOTE: Write the variable you want to assess
topics = c(12,16,13,15,14,19),#NOTE: Write the topics you want to test
model = First_STM, method = "difference",
cov.value1 = 'non-crisis', #NOTE:Name category 1 in your variable that you want to assess
cov.value2 = 'crisis', #NOTE:Name category 2 in your variable that will be your comparison
xlab = "Crisis ... Non-crisis", #NOTE: Write what you want on the x axis
main = "Effect of Crisis vs. Non-crisis", #NOTE: Write what you want on the main title
xlim = c(-.1, .1),
labeltype = "custom",
custom.labels = c("Fiscal Policy and Reform",
"Employment and Unemployment",
"Economic and Industrial Development",
"International Relations and Global Challenges",
"Economic Crises and Financial Troubles",
"Social Security and Future Planning")) #NOTE: Insert custom theme names
#INPUT HERE: Now we plot the effect of CRISIS, a categorical variable
plot(prep,
covariate = "crisis", #NOTE: Write the variable you want to assess
topics = c(12,16,13,15,14,19),#NOTE: Write the topics you want to test
model = First_STM, method = "difference",
cov.value1 = 'crisis', #NOTE:Name category 1 in your variable that you want to assess
cov.value2 = 'non-crisis', #NOTE:Name category 2 in your variable that will be your comparison
xlab = "Non-Crisis ... crisis", #NOTE: Write what you want on the x axis
main = "Effect of Non-Crisis vs. crisis", #NOTE: Write what you want on the main title
xlim = c(-.1, .1),
labeltype = "custom",
custom.labels = c("Fiscal Policy & Reform",
"Employment & Unemployment",
"Economic & Industrial Development",
"International Relations & Global Challenges",
"Economic Crises & Financial Troubles",
"Social Security & Future Planning")) #NOTE: Insert custom theme names
#INPUT HERE: Now we plot the effect of CRISIS, a categorical variable
plot(prep,
covariate = "crisis", #NOTE: Write the variable you want to assess
topics = c(12,16,13,15,14,19),#NOTE: Write the topics you want to test
model = First_STM, method = "difference",
cov.value1 = 'crisis', #NOTE:Name category 1 in your variable that you want to assess
cov.value2 = 'non-crisis', #NOTE:Name category 2 in your variable that will be your comparison
xlab = "Non-Crisis ... Crisis", #NOTE: Write what you want on the x axis
main = "Effect of Non-Crisis vs. Crisis", #NOTE: Write what you want on the main title
xlim = c(-.1, .1),
labeltype = "custom",
custom.labels = c("Fiscal Policy & Reform",
"Employment & Unemployment",
"Economic & Industrial Development",
"International Relations & Global Challenges",
"Economic Crises & Financial Troubles",
"Social Security & Future Planning")) #NOTE: Insert custom theme names
#INPUT HERE: Now we plot the effect of CRISIS, a categorical variable
plot(prep,
covariate = "crisis", #NOTE: Write the variable you want to assess
topics = c(12,16,13,15,14,19),#NOTE: Write the topics you want to test
model = First_STM, method = "difference",
cov.value1 = 'crisis', #NOTE:Name category 1 in your variable that you want to assess
cov.value2 = 'non-crisis', #NOTE:Name category 2 in your variable that will be your comparison
xlab = "Non-Crisis ... Crisis", #NOTE: Write what you want on the x axis
main = "Effect of Non-Crisis vs. Crisis", #NOTE: Write what you want on the main title
xlim = c(-.2, .2),
labeltype = "custom",
custom.labels = c("Fiscal Policy & Reform",
"Employment & Unemployment",
"Economic & Industrial Development",
"International Relations & Global Challenges",
"Economic Crises & Financial Troubles",
"Social Security & Future Planning")) #NOTE: Insert custom theme names
#INPUT HERE: Now we plot the effect of CRISIS, a categorical variable
plot(prep,
covariate = "crisis", #NOTE: Write the variable you want to assess
topics = c(12,16,13,15,14,19),#NOTE: Write the topics you want to test
model = First_STM, method = "difference",
cov.value1 = 'crisis', #NOTE:Name category 1 in your variable that you want to assess
cov.value2 = 'non-crisis', #NOTE:Name category 2 in your variable that will be your comparison
xlab = "Non-Crisis ... Crisis", #NOTE: Write what you want on the x axis
main = "Effect of Non-Crisis vs. Crisis", #NOTE: Write what you want on the main title
xlim = c(-.1, .1),
labeltype = "custom",
custom.labels = c("Fiscal Policy & Reform",
"Employment & Unemployment",
"Economic & Industrial Development",
"International Relations & Global Challenges",
"Economic Crises & Financial Troubles",
"Social Security & Future Planning")) #NOTE: Insert custom theme names
#INPUT HERE: Now we plot the effect of CRISIS, a categorical variable
plot(prep,
covariate = "crisis", #NOTE: Write the variable you want to assess
topics = c(12,16,13,15,14,19),#NOTE: Write the topics you want to test
model = First_STM, method = "difference",
cov.value1 = 'crisis', #NOTE:Name category 1 in your variable that you want to assess
cov.value2 = 'non-crisis', #NOTE:Name category 2 in your variable that will be your comparison
xlab = "Non-Crisis ... Crisis", #NOTE: Write what you want on the x axis
main = "Effect of Non-Crisis vs. Crisis", #NOTE: Write what you want on the main title
xlim = c(-.2, .2),
labeltype = "custom",
custom.labels = c("Fiscal Policy & Reform",
"Employment & Unemployment",
"Economic & Industrial Development",
"International Relations & Global Challenges",
"Economic Crises & Financial Troubles",
"Social Security & Future Planning")) #NOTE: Insert custom theme names
#INPUT HERE: Now we plot the effect of PARTY, a categorical variable
plot(prep,
covariate = "party", #NOTE: Write the variable you want to assess
topics = c(12,16,13,15,14,19),#NOTE: Write the topics you want to test
model = First_STM, method = "difference",
cov.value1 = 'R', #NOTE:Name category 1 in your variable that you want to assess
cov.value2 = 'D', #NOTE:Name category 2 in your variable that will be your comparison
xlab = "Democratic ... Republican", #NOTE: Write what you want on the x axis
main = "Effect of Democratic vs. Republican", #NOTE: Write what you want on the main title
xlim = c(-.2, .2),
labeltype = "custom",
custom.labels = c("Fiscal Policy & Reform",
"Employment & Unemployment",
"Economic & Industrial Development",
"International Relations & Global Challenges",
"Economic Crises & Financial Troubles",
"Social Security & Future Planning")) #NOTE: Insert custom theme names
